# Default values for core.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/scc-digitalhub/digitalhub-core
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: core

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  # fsGroup: 2000

global:
  externalHostAddress: ""
  externalTls: false
  registry:
    url: ""
    secretName: ""
    username: ""
    password: ""
    email: ""

securityContext:
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  # runAsUser: 1000

minio:
  endpoint: "minio"
  endpointPort: "9000"
  bucket: "mlrun"
  protocol: "http"

service:
  port: "8080"
  type: ClusterIP
  httpNodePort: ""

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: core.home
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:
  limits:
    cpu: 1000m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

config:
  rootUser: ""
  rootPassword: ""

postgres:
  host: ""
  database: ""
  port: ""
  schema: ""

krm:
  port: ""

kfp:
  endpoint: ""

runtime:
  nefertem:
    image: "ghcr.io/scc-digitalhub/digitalhub-sdk/wrapper-nefertem"
    tag: "0.5.0b4"
  dbt:
    image: "ghcr.io/scc-digitalhub/digitalhub-sdk/wrapper-dbt"
    tag: "0.5.0b4"
  mlrun:
    image: "ghcr.io/scc-digitalhub/digitalhub-sdk/wrapper-mlrun"
    tag: "0.5.0b4"
  kfp:
    image: "ghcr.io/scc-digitalhub/digitalhub-sdk/wrapper-kfp"
    tag: "0.5.0b4"
  python:
    image: "ghcr.io/scc-digitalhub/digitalhub-serverless/python-runtime-3.9"
    tag: "0.5.0b8"

authentication:
  basic:
    enabled: true
    username: ""
    password: ""
  openId:
    enabled: false
    issuerUri: ""
    jwtAudience: ""
    jwtClaim: ""
    oidcClientId: ""
    scope: ""
    externalSecret:
      name: ""
      key: ""

events:
  enabled: "false"
  rabbitmq:
    enabled: false
    host: ""
    port: ""
    vhost: ""
    queue: ""
    topic: ""
    routingKey: ""
    credentials:
      username: ""
      password: ""
      existingSecret:
        name: ""
        usernameKey: ""
        passwordKey: ""

solr:
  enabled: false
  url: ""
  collection:
    name: ""
    initialize:
      enabled: true
      image: smartcommunitylab/k8s-ansible:1.30.0-1.7.0-nonroot
