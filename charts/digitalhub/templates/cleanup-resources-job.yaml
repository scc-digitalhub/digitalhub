# SPDX-FileCopyrightText: Â© 2025 DSLab - Fondazione Bruno Kessler
#
# SPDX-License-Identifier: AGPL-3.0-or-later

# Delete all resources
---
{{- if .Values.global.cleanup.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
rules:
{{- if or ( index .Values "postgres-operator" "databases" "coder" "enabled" ) ( index .Values "postgres-operator" "databases" "core" "enabled" ) ( index .Values "postgres-operator" "databases" "digitalhub" "enabled" ) }}
  - apiGroups: ["acid.zalan.do"]
    resources: ["postgresqls"]
    verbs: ["get", "list", "watch", "delete"]
{{- end }}
  - apiGroups: [""]
    resources: ["services", "configmaps", "persistentvolumeclaims","pods"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["batch"]
    resources: ["jobs"]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["apps"]
    resources: ["statefulsets", "deployments" ]
    verbs: ["get", "list", "watch", "delete"]
  - apiGroups: ["networking.k8s.io"]
    resources: ["ingresses"]
    verbs: ["get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: delete-resources
  annotations:
    "helm.sh/hook": pre-delete,post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "digitalhub.labels" .  | nindent 4 }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: delete-resources
subjects:
  - name: delete-resources
    namespace: {{ .Release.Namespace }}
    kind: ServiceAccount
---
{{- if or ( index .Values "postgres-operator" "databases" "coder" "enabled" ) ( index .Values "postgres-operator" "databases" "core" "enabled" ) ( index .Values "postgres-operator" "databases" "digitalhub" "enabled" ) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-postgres-databases
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-postgres-databases
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-postgres-databases
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "kubectl -n {{ .Release.Namespace }} delete postgresql --all && sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12 }}
            readOnlyRootFilesystem: {{ .Values.jobs.delete.securityContext.readOnlyRootFilesystem }}
      restartPolicy: OnFailure
---
{{- end }}
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-coder
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "5"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-coder
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-coder
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "kubectl -n {{ .Release.Namespace }} delete statefulsets,deploy,svc,cm -l app.kubernetes.io/part-of=coder && kubectl -n {{ .Release.Namespace }} delete pvc -l app.kubernetes.io/part-of=coder && kubectl -n {{ .Release.Namespace }} delete ingresses -l app.kubernetes.io/part-of=coder && sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12 }}
            readOnlyRootFilesystem: {{ .Values.jobs.delete.securityContext.readOnlyRootFilesystem }}
      restartPolicy: OnFailure
---
{{- $resource := list -}}
{{- range $k, $v := .Values.global.cleanup }}
{{- if and $v (ne $k "enabled") }}
{{- $resource = append $resource $k -}}
{{- end }}
{{- end }}
{{- if gt (len $resource) 0 -}}
apiVersion: batch/v1
kind: Job
metadata:
  name: delete-selected-resources
  annotations:
    "helm.sh/hook": post-delete
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation,hook-failed
    "helm.sh/hook-weight": "3"
  labels:
    {{- include "digitalhub.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      name: delete-selected-resources
      labels:
        {{- include "digitalhub.labels" . | nindent 8 }}
    spec:
      serviceAccountName: delete-resources
      containers:
        - name: delete-selected-resources
          image: "bitnami/kubectl:latest"
          command: ["/bin/sh"]
          args: ["-c", "{{ range $resource }}kubectl -n {{ $.Release.Namespace }} delete --all {{ . }} && {{ end }} sleep 1m"]
          securityContext:
            {{- toYaml .Values.global.securityContext | nindent 12 }}
      restartPolicy: OnFailure
{{- end }}
{{- end }}
