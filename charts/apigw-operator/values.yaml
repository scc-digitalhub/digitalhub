# SPDX-FileCopyrightText: Â© 2025 DSLab - Fondazione Bruno Kessler
#
# SPDX-License-Identifier: Apache-2.0

#  global -- Global values
global:
  #  global.priority -- Priority class configuration
  priority:
    #  global.priority.enabled -- Enable/Disable priority classes
    enabled: false
    #  global.priority.lowPriority -- Low priority class configuration
    lowPriority:
      # global.priority.lowPriority.className -- Name of the low priority class
      className: ""

#  affinity -- Affinity for pod assignment.
## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity:
  #  affinity.nodeAffinity -- Constrain which nodes your Pod can be scheduled on based on node labels.
  nodeAffinity:
    #  affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution -- The scheduler can't schedule the Pod unless the rule is met. This functions like nodeSelector, but with a more expressive syntax.
    requiredDuringSchedulingIgnoredDuringExecution:
      #  affinity.nodeAffinity.requiredDuringSchedulingIgnoredDuringExecution.nodeSelectorTerms -- Kubernetes only schedules the Pod onto nodes that have each of the labels you specify.
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/arch
              operator: In
              values:
                - amd64
            - key: kubernetes.io/os
              operator: In
              values:
                - linux

#  autoscaling -- Adjusts the number of replicas in a workload to match observed resource utilization such as CPU or memory usage.
autoscaling:
  #  autoscaling.enabled -- Enable horizontal scaling
  enabled: false
  #  autoscaling.maxReplicas -- Set max replicas for autoscaling
  maxReplicas: 100
  #  autoscaling.minReplicas -- Set min replicas for autoscaling
  minReplicas: 1
  #  autoscaling.targetCPUUtilizationPercentage -- Set CPU utilization percentage that trigger the autoscaling
  targetCPUUtilizationPercentage: 80

#  deployment -- Set containers properties
deployment:
  #  deployment.image --
  image:
    #  deployment.image.pullPolicy --
    pullPolicy: IfNotPresent
  #  deployment.ingressClassName --
  ingressClassName: ""
  #  deployment.kubeRbacProxy -- DEPRECATED Kube-rbac-proxy secures /metrics endpoint as a manager sidecar, using the service account token mounted into the Pod by default corrects this problem.
  kubeRbacProxy:
    #  deployment.kubeRbacProxy.args -- DEPRECATED kube-rbac-proxy configure additional arguments to pass to kube-rbac-proxy sidecar container.
    args:
      - "--logtostderr=true"
      - "--secure-listen-address=0.0.0.0:8443"
      - "--upstream=http://127.0.0.1:8080/"
      - "--v=0"
    #  deployment.kubeRbacProxy.image -- DEPRECATED kube-rbac-proxy container image configuration.
    image:
      #  deployment.kubeRbacProxy.image.repository -- DEPRECATED kube-rbac-proxy container image repository.
      repository: gcr.io/kubebuilder/kube-rbac-proxy
      #  deployment.kubeRbacProxy.image.tag -- DEPRECATED kube-rbac-proxy container image tag.
      tag: v0.13.1
    #  deployment.kubeRbacProxy.name -- DEPRECATED kube-rbac-proxy container name.
    name: kube-rbac-proxy
    #  deployment.kubeRbacProxy.ports -- DEPRECATED kube-rbac-proxy container port.
    ports:
      #  deployment.kubeRbacProxy.ports.containerPort -- DEPRECATED kube-rbac-proxy container port.
      containerPort: 8443
    #  deployment.kubeRbacProxy.resources -- DEPRECATED kube-rbac-proxy container resource requests and limits.
    resources:
      limits:
        cpu: 500m
        memory: 128Mi
      requests:
        cpu: 5m
        memory: 64Mi
    #  deployment.kubeRbacProxy.securityContext -- DEPRECATED kube-rbac-proxy [Security context for container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
    securityContext:
      #  deployment.kubeRbacProxy.securityContext.allowPrivilegeEscalation -- DEPRECATED kube-rbac-proxy container allow privilege escalation.
      allowPrivilegeEscalation: false
      #  deployment.kubeRbacProxy.securityContext.capabilities -- DEPRECATED kube-rbac-proxy container configure capabilities.
      capabilities:
        #  deployment.kubeRbacProxy.securityContext.capabilities.drop -- DEPRECATED kube-rbac-proxy container drop capabilities.
        drop:
          - ALL
      #  deployment.kubeRbacProxy.securityContext.runAsNonRoot -- DEPRECATED kube-rbac-proxy container allow run as root.
      runAsNonRoot: true
      #  deployment.kubeRbacProxy.securityContext.seccompProfile -- DEPRECATED kube-rbac-proxy container configure seccompProfile.
      seccompProfile:
        #  deployment.kubeRbacProxy.securityContext.seccompProfile.type --  DEPRECATED kube-rbac-proxy container configure seccompProfile type.
        type: RuntimeDefault
  #  deployment.manager -- Manager container is responsible to reconcile apigw-operator CR.
  manager:
    #  deployment.manager.args -- Manager configure additional arguments
    args:
      - "--health-probe-bind-address=:8081"
      - "--leader-elect"
      - "--metrics-bind-address=127.0.0.1:8080"
    #  deployment.manager.command -- Ovveride image entrypoint
    command:
      - /manager
    #  deployment.manager.image -- Manager container image configuration.
    image:
      #  deployment.manager.image.repository -- Manager container image repository.
      repository: ghcr.io/scc-digitalhub/apigw-operator
      #  deployment.manager.image.tag -- Manager container image tag.
      tag: ""
    #  deployment.manager.name -- Manager container name.
    name: manager
    #  deployment.manager.resources -- Manager container resource requests and limits.
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 10m
        memory: 64Mi
    #  deployment.manager.securityContext -- Manager [Security context for container](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
    securityContext:
      #  deployment.manager.securityContext.allowPrivilegeEscalation -- Manager container allow privilege escalation
      allowPrivilegeEscalation: false
      #  deployment.manager.securityContext.capabilities -- Manager container configure capabilities.
      capabilities:
        #  deployment.manager.securityContext.capabilities.drop -- Manager container drop capabilities.
        drop:
          - ALL
      #  deployment.manager.securityContext.runAsNonRoot -- Manager container allow run as root.
      runAsNonRoot: true
      #  deployment.manager.securityContext.seccompProfile -- Manager container configure seccompProfile.
      seccompProfile:
        #  deployment.manager.securityContext.seccompProfile.type -- Manager container configure seccompProfile.
        type: RuntimeDefault
  #  deployment.tls --
  tls:
    #  deployment.tls.enabled --
    enabled: false
    #  deployment.tls.wildcardCertSecretName --
    wildcardCertSecretName: ""

#  fullnameOverride -- String to fully override `apigw-operator.fullname` template.
fullnameOverride: ""

#  imagePullSecrets -- Image pull secrets
#  Optionally specify an array of imagePullSecrets.
#  Secrets must be manually created in the namespace.
#  ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

#  ingress -- Ingress configurations.
ingress:
  #  ingress.enabled -- Enables Ingress.
  enabled: false
  #  ingress.annotations -- Ingress annotations (values are templated).
  annotations: {}
  #  ingress.className -- Ingress Class Name. MAY be required for Kubernetes versions >= 1.18-
  className: ""
  #  ingress.hosts -- Ingress accepted hostnames.
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  #  ingress.tls -- Ingress TLS configuration.
  tls: []

#  nameOverride -- String to partially override `apigw-operator.fullname` template (will maintain the release name)
nameOverride: ""

#  namespaceValues -- Configure operator scope clusterwide or namespaced
namespaceValues:
  #  namespaceValues.namespace -- Namespace name where operator watch for CR
  namespace: ""
  #  namespaceValues.namespaced -- Enable/Disable Cluster wide mode
  namespaced: true

#  nodeSelector -- Node labels for pod assignment. Ref: https://kubernetes.io/docs/user-guide/node-selection/.
nodeSelector: {}

#  podAnnotations -- Annotations to add to each pod.
podAnnotations:
  #  podAnnotations.kubectl.kubernetes.io/default-container --
  kubectl.kubernetes.io/default-container: manager

#  podLabels -- Labels to add to each pod.
podLabels:
  #  podLabels.control-plane --
  control-plane: controller-manager

#  podSecurityContext -- [Security context for pod](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/)
podSecurityContext:
  #  podSecurityContext.runAsNonRoot -- Pod allow run as root.
  runAsNonRoot: true
  #  podSecurityContext.seccompProfile -- Pod configure seccompProfile.
  seccompProfile:
    #  podSecurityContext.seccompProfile.type -- Pod configure seccompProfile type.
    type: RuntimeDefault

#  replicaCount -- Desired number of pods.
replicaCount: 1

#  resources -- container resource requests and limits.
resources: {}

#  service -- Service configurations.
service:
  #  service.port -- Service port.
  port: 8443
  #  service.type -- Service type.
  type: ClusterIP

#  serviceAccount -- Service account configuration.
serviceAccount:
  #  serviceAccount.annotations -- Additional Service Account annotations.
  annotations: {}
  #  serviceAccount.automount -- Automount API credentials for a Service Account.
  automount: true
  #  serviceAccount.create -- If `true` a Service Account will be created.
  create: true
  #  serviceAccount.name -- Service account name.
  name: "apigw-operator-controller-manager"

#  tolerations -- List of node taints to tolerate (requires Kubernetes >= 1.6).
tolerations: []

#  volumeMounts -- Additional volumes.
volumeMounts: []

#  volumes -- Additional volumes to mount.
volumes: []
